[{"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/reportWebVitals.js":"1","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/UserCapticalRecord.jsx":"2","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/UserSetting.jsx":"3","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/form/OwnInput.jsx":"4","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/asyncRouter/AsyncImportComponent.jsx":"5","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/EntrustComponent.jsx":"6","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/OrderComponent.jsx":"7","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/Home.jsx":"8","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/table/OwnTableHead.jsx":"9","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/table/OwnTableCell.jsx":"10","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/modal/OwnDialog.jsx":"11","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/modal/OwnBase.jsx":"12","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/routers/index.js":"13","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/UserAccount.jsx":"14","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/User.jsx":"15","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/HeaderComponent.jsx":"16","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/slider/OwnSlider.jsx":"17","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/checkbox/CheckBox.jsx":"18","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/account/Withdraw.jsx":"19","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/account/Recharge.jsx":"20","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/reducers/User.js":"21","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/index.js":"22","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/reducers/index.js":"23","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/reducers/Common.js":"24","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/types/index.js":"25","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/index.js":"26","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/RecordComponent.jsx":"27","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/MarketComponent.jsx":"28","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/tooltip/OwnTooltip.jsx":"29","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/App.js":"30","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/wallet/Connectors.js":"31","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/wallet/Connect.jsx":"32","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/hooks/Wallet.jsx":"33","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/utils/Constants.js":"34","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/error/NotFound.jsx":"35"},{"size":362,"mtime":1606123980413,"results":"36","hashOfConfig":"37"},{"size":8177,"mtime":1606803919796,"results":"38","hashOfConfig":"37"},{"size":2510,"mtime":1606803976150,"results":"39","hashOfConfig":"37"},{"size":685,"mtime":1606730541314,"results":"40","hashOfConfig":"37"},{"size":859,"mtime":1606806018703,"results":"41","hashOfConfig":"37"},{"size":7659,"mtime":1606809390407,"results":"42","hashOfConfig":"37"},{"size":11388,"mtime":1606804189105,"results":"43","hashOfConfig":"37"},{"size":269,"mtime":1606206348520,"results":"44","hashOfConfig":"37"},{"size":213,"mtime":1606706766873,"results":"45","hashOfConfig":"37"},{"size":493,"mtime":1606706742831,"results":"46","hashOfConfig":"37"},{"size":262,"mtime":1606793567711,"results":"47","hashOfConfig":"37"},{"size":827,"mtime":1606806565747,"results":"48","hashOfConfig":"37"},{"size":1377,"mtime":1606788480081,"results":"49","hashOfConfig":"37"},{"size":3704,"mtime":1606804269661,"results":"50","hashOfConfig":"37"},{"size":1140,"mtime":1606708655202,"results":"51","hashOfConfig":"37"},{"size":7473,"mtime":1606809884839,"results":"52","hashOfConfig":"37"},{"size":876,"mtime":1606384456039,"results":"53","hashOfConfig":"37"},{"size":1439,"mtime":1606379006889,"results":"54","hashOfConfig":"37"},{"size":1564,"mtime":1606805830287,"results":"55","hashOfConfig":"37"},{"size":1381,"mtime":1606804205773,"results":"56","hashOfConfig":"37"},{"size":263,"mtime":1606803876667,"results":"57","hashOfConfig":"37"},{"size":699,"mtime":1606804885676,"results":"58","hashOfConfig":"37"},{"size":190,"mtime":1606802237460,"results":"59","hashOfConfig":"37"},{"size":832,"mtime":1606807264133,"results":"60","hashOfConfig":"37"},{"size":152,"mtime":1606805467625,"results":"61","hashOfConfig":"37"},{"size":377,"mtime":1606803853428,"results":"62","hashOfConfig":"37"},{"size":1596,"mtime":1606377289881,"results":"63","hashOfConfig":"37"},{"size":2762,"mtime":1606456747651,"results":"64","hashOfConfig":"37"},{"size":366,"mtime":1606455328168,"results":"65","hashOfConfig":"37"},{"size":128,"mtime":1606704201219,"results":"66","hashOfConfig":"37"},{"size":1141,"mtime":1606805217961,"results":"67","hashOfConfig":"37"},{"size":2518,"mtime":1606807805712,"results":"68","hashOfConfig":"37"},{"size":2374,"mtime":1606807875960,"results":"69","hashOfConfig":"37"},{"size":203,"mtime":1606809601852,"results":"70","hashOfConfig":"37"},{"size":107,"mtime":1606703565248,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1foctoh",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/reportWebVitals.js",[],["153","154"],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/UserCapticalRecord.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/UserSetting.jsx",[],["155","156"],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/form/OwnInput.jsx",[],["157","158"],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/asyncRouter/AsyncImportComponent.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/EntrustComponent.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/OrderComponent.jsx",["159","160","161","162"],"import React, { useState, useEffect, Fragment, useRef, useCallback } from 'react';\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\nimport OwnTooltip from '../tooltip/OwnTooltip';\nimport OwnSlider from '../slider/OwnSlider';\nimport Checkbox from '../checkbox/CheckBox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Types from '../../store/types';\nimport './order.scss';\n\nconst marks = [\n  { value: 0, label: '1x' },\n  { value: 20, label: '20x' },\n  { value: 40, label: '40x' },\n  { value: 60, label: '60x' },\n  { value: 80, label: '80x' },\n  { value: 100, label: '100x' },\n];\n\n// 止盈比例列表\nconst profitRateList = [25, 50, 75, 100, 150, 200];\n// 止损比例列表\nconst stopRateList = [30, 40, 50, 60, 70, 80];\n\nconst OrderComponent = () => {\n  const dispatch = useDispatch();\n  const rechargeVisible = useSelector((state) => state.common.recharge.visible);\n  const orderRef = useRef();\n  const [orderHeight, setOrderHeight] = useState(0);\n  const [moreFlag, setMoreFlag] = useState(false);\n\n  const [type, setType] = useState(1); // 类型 1:现价 2:市价\n  const [dir, setDir] = useState(1); // 方向 1:涨 2:跌\n  const [moneyCode, setMoneyCode] = useState(''); // 支付币种\n  const [price, setPrice] = useState(''); // 价格\n  const [bond, setBond] = useState(''); // b保证金\n  const [bondRate, setBondRate] = useState(''); // 保证金比例\n  const [profitType, setProfitType] = useState(1); // 止盈类型\n  const [profit, setProfit] = useState(''); // 止盈\n  const [profitRate, setProfitRate] = useState(''); // 止盈比例\n  const [stopType, setStopType] = useState(1); // 止损类型\n  const [stop, setStop] = useState(''); // 止损\n  const [stopRate, setStopRate] = useState(''); // 止损比例\n  const [fee, setFee] = useState(0); // 手续费\n  const [gas, setGas] = useState(0); // gas\n  const [level, setLevel] = useState(1); // 杠杆\n  const [levelMax, setLevelMax] = useState(false); // 杠杆最大\n  const [levelRate, setLevelRate] = useState(1); // 杠杆比例\n\n  useEffect(() => {\n    // 设置列表高度\n    setOrderHeight(() => orderRef.current.clientHeight);\n  }, []);\n\n  //\n  const valuetext = useCallback((value) => {\n    console.log(value);\n    // setLevel(value);\n    return value;\n  }, []);\n\n  return (\n    <div className=\"order\" ref={orderRef}>\n      <div className=\"order-box\" style={{ height: `${orderHeight}px` }}>\n        <div className=\"btn-box\">\n          <button className={`btn-default ${dir === 1 ? 'bg-green' : ''}`} onClick={() => setDir(1)}>\n            买涨\n          </button>\n          <button className={`btn-default ${dir === 2 ? 'bg-red' : ''}`} onClick={() => setDir(2)}>\n            买跌\n          </button>\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <label htmlFor=\"\">钱包</label>\n          <span className=\"sd\">\n            0x57eD…8902\n            <OwnTooltip title={<React.Fragment>需充进Layer2中才可进行交易Layer2上交易更快,gas更低</React.Fragment>} arrow placement=\"bottom\">\n              <font className=\"tip-text\">(Layer2)</font>\n            </OwnTooltip>\n          </span>\n        </div>\n\n        <div className=\"form-ele-sl\">\n          <label htmlFor=\"\">支付Token</label>\n          <span></span>\n          <select value={moneyCode} onChange={(e) => setMoneyCode(e.target.value)}>\n            <option value=\"ETH\">ETH</option>\n            <option value=\"USDT\">USDT</option>\n          </select>\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <label htmlFor=\"\">\n            可用\n            <OwnTooltip title={<React.Fragment>需充进Layer2中才可进行交易Layer2上交易更快,gas更低</React.Fragment>} arrow placement=\"bottom\">\n              <font className=\"tip-text\">(Layer2)</font>\n            </OwnTooltip>\n          </label>\n          <span className=\"sd\">55372901.627182</span>\n          <font className=\"recharge-btn\" onClick={() => dispatch({ type: Types.RECHARGE_VISIBLE, payload: { visible: !rechargeVisible } })}>\n            充值\n          </font>\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <label htmlFor=\"\">可用(ETH Main)</label>\n          <span className=\"sd\">55372901.627182</span>\n        </div>\n\n        <div className=\"form-ele-select\">\n          <select value={type} onChange={(e) => setType(parseInt(e.target.value))}>\n            <option value={1}>现价委托</option>\n            <option value={2}>市价委托</option>\n          </select>\n        </div>\n\n        <div className={type === 2 ? 'form-ele-disable' : 'form-ele-input'}>\n          <label htmlFor=\"\">价格</label>\n          <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} placeholder={type === 2 ? '最优市场价' : '请输入价格'} disabled={type === 2} />\n        </div>\n\n        <div className=\"form-ele-input\">\n          <label htmlFor=\"\">保证金</label>\n          <input type=\"text\" value={bond} onChange={(e) => setBond(e.target.value)} placeholder=\"最小为2USDT\" />\n        </div>\n\n        <ul className=\"form-list-c4\">\n          <li className={bondRate === 10 ? 'active' : ''} onClick={() => setBondRate(10)}>\n            10%\n          </li>\n          <li className={bondRate === 20 ? 'active' : ''} onClick={() => setBondRate(20)}>\n            20%\n          </li>\n          <li className={bondRate === 50 ? 'active' : ''} onClick={() => setBondRate(50)}>\n            50%\n          </li>\n          <li className={bondRate === 100 ? 'active' : ''} onClick={() => setBondRate(100)}>\n            100%\n          </li>\n        </ul>\n\n        <div className=\"form-ele-input\">\n          <label htmlFor=\"\">杠杆</label>\n          <input type=\"text\" value={level} onChange={(e) => setLevel(e.target.value)} />\n          <span className=\"unit\" style={{ color: '#f4f9ff' }}>\n            x\n          </span>\n        </div>\n\n        <div className=\"form-slider\">\n          <OwnSlider disabled={levelMax} defaultValue={20} getAriaValueText={valuetext} step={10} valueLabelDisplay=\"off\" marks={marks} />\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <label htmlFor=\"\">\n            <OwnTooltip title={<React.Fragment>可用最大杠杆根据当前资金池深度以及头寸动态调整</React.Fragment>} arrow placement=\"bottom\">\n              <font className=\"tip-text\">当前可用最大杠杆:</font>\n            </OwnTooltip>\n            75x\n          </label>\n          <OwnTooltip title={<React.Fragment>根据建仓时可用的最大杠杆建仓</React.Fragment>} arrow placement=\"bottom-end\">\n            <span className=\"sd tip-text\">\n              <Checkbox size=\"small\" checked={levelMax} onChange={(e) => setLevelMax(e.target.checked)} />\n              最大\n            </span>\n          </OwnTooltip>\n        </div>\n\n        <div className=\"form-ele-more\">\n          <div className=\"more-title\">\n            <label htmlFor=\"\">高级</label>\n            <span onClick={() => setMoreFlag(!moreFlag)}>\n              <DoubleArrowRoundedIcon className={moreFlag ? 'svgup' : 'svgdown'} />\n            </span>\n          </div>\n\n          {moreFlag && (\n            <Fragment>\n              <div className=\"form-ele-desc\">\n                <label htmlFor=\"\">止盈</label>\n                <span className=\"sd\">\n                  <SwapHorizIcon style={{ fontSize: '18px', cursor: 'pointer' }} onClick={() => setProfitType(profitType === 1 ? 2 : 1)} />\n                  {profitType === 1 ? '价格' : '比例'}\n                </span>\n              </div>\n              <div className=\"form-ele-input\">\n                <label htmlFor=\"\">止盈价</label>\n                <input type=\"text\" placeholder=\"输入止盈价\" value={profit} onChange={(e) => setProfit(e.target.value)} />\n                {profitType === 2 && <span className=\"unit\">%</span>}\n              </div>\n              {profitType === 2 && (\n                <ul className=\"form-list-c6\">\n                  {profitRateList.map((item) => {\n                    return (\n                      <li className={profitRate === item ? 'active' : ''} onClick={() => setProfitRate(item)} key={item}>\n                        {item}%\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n              <div className=\"form-ele-desc\">\n                <label htmlFor=\"\">止损</label>\n                <span className=\"sd\">\n                  <SwapHorizIcon style={{ fontSize: '18px', cursor: 'pointer' }} onClick={() => setStopType(stopType === 1 ? 2 : 1)} />\n                  {profitType === 1 ? '价格' : '比例'}\n                </span>\n              </div>\n              <div className=\"form-ele-input\">\n                <label htmlFor=\"\">止损价</label>\n                <input type=\"text\" placeholder=\"输入止损价\" value={stop} onChange={(e) => setStop(e.target.value)} />\n                {stopType === 2 && <span className=\"unit\">%</span>}\n              </div>\n              {stopType === 2 && (\n                <ul className=\"form-list-c6\">\n                  {stopRateList.map((item) => {\n                    return (\n                      <li className={stopRate === item ? 'active' : ''} onClick={() => setStopRate(item)} key={item}>\n                        {item}%\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n              <div className=\"form-ele-desc\">\n                <OwnTooltip title={<React.Fragment>因下单时间和实际成交时间导致的价格滑点,不可避免</React.Fragment>} arrow placement=\"bottom\">\n                  <label htmlFor=\"\" className=\"tip-text\">\n                    最高滑价\n                  </label>\n                </OwnTooltip>\n                <span className=\"sd\"></span>\n              </div>\n              <ul className=\"form-list-c3\">\n                <li className=\"active\">0.5%</li>\n                <li>1.0%</li>\n                <li>定制</li>\n              </ul>\n            </Fragment>\n          )}\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <OwnTooltip title={<React.Fragment>Teemo不收取交易手续费</React.Fragment>} arrow placement=\"bottom\">\n            <label htmlFor=\"\" className=\"tip-text\">\n              手续费\n            </label>\n          </OwnTooltip>\n          <span className=\"sd\">{fee}</span>\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <OwnTooltip title={<React.Fragment>GAS Price: 3 GWEI</React.Fragment>} arrow placement=\"bottom\">\n            <label htmlFor=\"\" className=\"tip-text\">\n              GAS(ETH)\n            </label>\n          </OwnTooltip>\n          <span className=\"sd\">{gas}</span>\n        </div>\n\n        <ul className=\"form-list-c3 mb24\">\n          <li className={level === 1 ? 'active' : ''} onClick={() => setLevel(1)}>\n            Safe\n          </li>\n          <li className={level === 2 ? 'active' : ''} onClick={() => setLevel(2)}>\n            Standard\n          </li>\n          <li className={level === 3 ? 'active' : ''} onClick={() => setLevel(3)}>\n            Fast\n          </li>\n        </ul>\n\n        <button className={`btn-default ${type === 1 ? 'bg-green' : 'bg-red'}`} style={{ width: '100%' }}>\n          授权USDT\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderComponent;\n","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/Home.jsx",["163"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Index() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state);\n\n  return <div className=\"App\">{JSON.stringify(user)}</div>;\n}\n\nexport default Index;\n","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/table/OwnTableHead.jsx",[],["164","165"],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/table/OwnTableCell.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/modal/OwnDialog.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/modal/OwnBase.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/routers/index.js",["166"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AsyncImportComponent from '../components/asyncRouter/AsyncImportComponent';\n\n// import HeaderComponent from '../components/quotation/HeaderComponent';\nimport User from '../pages/User';\n\nconst Home = AsyncImportComponent(() => import('../pages/Home'));\nconst Quotation = AsyncImportComponent(() => import('../pages/Quotation'));\n// const User = AsyncImportComponent(() => import('../pages/User'));\nconst UserAccount = AsyncImportComponent(() => import('../pages/UserAccount'));\nconst UserSetting = AsyncImportComponent(() => import('../pages/UserSetting'));\nconst UserCapticalRecord = AsyncImportComponent(() => import('../pages/UserCapticalRecord'));\nconst NotFound = AsyncImportComponent(() => import('../pages/error/NotFound'));\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Quotation} />\n        <Route path=\"/trade\" exact component={Quotation} />\n        <User>\n          <Route path=\"/user/center\" exact component={UserAccount} />\n          <Route path=\"/user/setting\" exact component={UserSetting} />\n          <Route path=\"/user/rw-record\" exact component={UserCapticalRecord} />\n        </User>\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n",["167","168"],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/UserAccount.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/User.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/HeaderComponent.jsx",["169","170","171"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n// import Notifications from '@material-ui/icons/Notifications';\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline';\nimport OwnPopover from '../popover/OwnPopover';\nimport { usePopupState, bindToggle, bindPopover } from 'material-ui-popup-state/hooks';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Types from '../../store/types';\nimport { useWeb3React } from '@web3-react/core';\nimport { walletconnect } from '../wallet/Connectors';\nimport { NETWORK_LIST, NETWORK_TYPE } from '../../utils/Constants';\n\nimport WithdrawModal from '../account/Withdraw';\nimport RechargeModal from '../account/Recharge';\nimport ConnectModal from '../wallet/Connect';\nimport './header.scss';\n\nconst HeaderComponent = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const withdrawVisible = useSelector((state) => state.common.withdraw.visible);\n  const rechargeVisible = useSelector((state) => state.common.recharge.visible);\n\n  const context = useWeb3React();\n  const { active, account, library, connector, deactivate, chainId } = context;\n\n  const popupStateLang = usePopupState({ variant: 'popover', popupId: 'langPopover' });\n  const popupStateWallet = usePopupState({ variant: 'popover', popupId: 'walletPopover' });\n  const popupStateOrder = usePopupState({ variant: 'popover', popupId: 'orderPopover' });\n\n  const [network, setNetwork] = useState(false);\n  useEffect(() => {\n    if (NETWORK_TYPE === 'prod') {\n      if (!chainId || chainId === 1) {\n        setNetwork(false);\n      } else {\n        // 显示网络错误\n        setNetwork(true);\n      }\n    } else if (NETWORK_TYPE === 'dev') {\n      if (!chainId || chainId === 3) {\n        setNetwork(false);\n      } else {\n        // 显示网络错误\n        setNetwork(true);\n      }\n    }\n  }, [active, chainId]);\n\n  return (\n    <div className=\"header\">\n      <img src=\"/imgs/logo.png\" alt=\"\" />\n      <ul className=\"nav\">\n        <li className=\"item\">\n          <NavLink to=\"/trade\">交易</NavLink>\n        </li>\n        <li className=\"item\">\n          <a href=\"\">流动池</a>\n        </li>\n        <li className=\"item\">\n          <NavLink\n            to=\"/user/center\"\n            isActive={(match, location) => {\n              return location.pathname ? location.pathname.indexOf('/user') !== -1 : false;\n            }}\n          >\n            账户\n          </NavLink>\n        </li>\n        <li className=\"item\">\n          <a href=\"\">公示</a>\n        </li>\n        <li className=\"item\">\n          <a href=\"\">\n            更多 <ExpandMoreRoundedIcon />\n          </a>\n        </li>\n      </ul>\n      {/* <div className=\"news\">\n        <Notifications />\n      </div> */}\n      {active && (\n        <div className=\"order-status\" {...bindToggle(popupStateOrder)}>\n          1 Pending...\n          <OwnPopover {...bindPopover(popupStateOrder)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} transformOrigin={{ vertical: 'top', horizontal: 'left' }}>\n            <ul className=\"order-status-list\">\n              <li className=\"title\">\n                <span>最近7笔交易</span>\n                <span>清空</span>\n              </li>\n              <li className=\"item\">\n                <span>USDT/ETH 建仓</span>\n                <span>\n                  <CheckCircleOutline />\n                </span>\n              </li>\n              <li className=\"item\">\n                <span>充值 11938.002912 USDT</span>\n                <span>\n                  <CheckCircleOutline />\n                </span>\n              </li>\n              <li className=\"no-data\">暂无交易记录</li>\n            </ul>\n          </OwnPopover>\n        </div>\n      )}\n\n      <div className=\"language\" {...bindToggle(popupStateLang)}>\n        English <ExpandMoreRoundedIcon />\n        <OwnPopover {...bindPopover(popupStateLang)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} transformOrigin={{ vertical: 'top', horizontal: 'left' }}>\n          <ul className=\"lang-list\">\n            <li className=\"active\">English</li>\n            <li onClick={() => console.log('简体中文')}>简体中文</li>\n          </ul>\n        </OwnPopover>\n      </div>\n\n      {active ? (\n        <div className=\"wallet\" {...bindToggle(popupStateWallet)}>\n          <img src={`/imgs/wallet/${library.connection.url}.png`} width=\"20\" alt=\"\" />\n          <span className=\"addr\">{`${account.substring(0, 6)}…${account.substring(account.length, account.length - 4)}`}</span>\n          {!network ? <span className=\"network\">{NETWORK_LIST[chainId]}</span> : <span className=\"network error\">Wrong Network</span>}\n\n          <ArrowDropDownRoundedIcon style={{ fontSize: 32, margin: '0 -6px 0 -5px' }} />\n        </div>\n      ) : (\n        <button className=\"btn-primary\" onClick={() => dispatch({ type: Types.WALLET_VISIBLE, payload: { visible: true } })}>\n          连接钱包\n        </button>\n      )}\n      <OwnPopover {...bindPopover(popupStateWallet)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} transformOrigin={{ vertical: 'top', horizontal: 'left' }}>\n        <div className=\"wallet-popover\">\n          <div className=\"recharge-box line\">\n            <button className=\"btn-primary\" onClick={() => dispatch({ type: Types.RECHARGE_VISIBLE, payload: { visible: !rechargeVisible } })}>\n              充值(Layer2)\n            </button>\n            <button className=\"btn-default\" onClick={() => dispatch({ type: Types.WITHDRAW_VISIBLE, payload: { visible: !withdrawVisible } })}>\n              提现\n            </button>\n          </div>\n          <ul className=\"wallet-menu-list\">\n            <li onClick={() => history.push('/user/rw-record')}>\n              <ListAltIcon />\n              交易记录\n            </li>\n            <li onClick={() => history.push('/user/center')}>\n              <AccountBalanceWalletIcon />\n              钱包详情\n            </li>\n            <li className=\"line\" onClick={() => history.push('/user/setting')}>\n              <SettingsIcon />\n              个人设置\n            </li>\n            <li>\n              <FileCopyIcon />\n              复制地址\n            </li>\n            <li>\n              <StorageIcon />\n              在Etherscan中查看\n            </li>\n          </ul>\n          <div className=\"btn-box\">\n            <button\n              onClick={() => {\n                try {\n                  if (connector === walletconnect) {\n                    connector.close();\n                  } else {\n                    deactivate();\n                  }\n                } catch (error) {}\n              }}\n            >\n              断开钱包\n            </button>\n          </div>\n        </div>\n      </OwnPopover>\n\n      <WithdrawModal></WithdrawModal>\n      <RechargeModal></RechargeModal>\n      <ConnectModal></ConnectModal>\n    </div>\n  );\n};\n\nexport default HeaderComponent;\n","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/slider/OwnSlider.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/checkbox/CheckBox.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/account/Withdraw.jsx",[],["172","173"],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/account/Recharge.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/reducers/User.js",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/index.js",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/reducers/index.js",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/reducers/Common.js",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/types/index.js",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/store/index.js",["174"],"import logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      // logger,\n      thunk\n    )\n  )\n);\n\nexport default store;\n","/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/RecordComponent.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/quotation/MarketComponent.jsx",["175"],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/tooltip/OwnTooltip.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/App.js",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/wallet/Connectors.js",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/components/wallet/Connect.jsx",["176","177"],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/hooks/Wallet.jsx",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/utils/Constants.js",[],"/Users/jamin/workspace/drep/teemo/teemo-exchange/src/pages/error/NotFound.jsx",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"178","replacedBy":"182"},{"ruleId":"180","replacedBy":"183"},{"ruleId":"178","replacedBy":"184"},{"ruleId":"180","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":44,"column":15,"nodeType":"188","messageId":"189","endLine":44,"endColumn":21},{"ruleId":"186","severity":1,"message":"190","line":45,"column":15,"nodeType":"188","messageId":"189","endLine":45,"endColumn":21},{"ruleId":"186","severity":1,"message":"191","line":48,"column":10,"nodeType":"188","messageId":"189","endLine":48,"endColumn":19},{"ruleId":"186","severity":1,"message":"192","line":48,"column":21,"nodeType":"188","messageId":"189","endLine":48,"endColumn":33},{"ruleId":"186","severity":1,"message":"193","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":17},{"ruleId":"178","replacedBy":"194"},{"ruleId":"180","replacedBy":"195"},{"ruleId":"186","severity":1,"message":"196","line":8,"column":7,"nodeType":"188","messageId":"189","endLine":8,"endColumn":11},{"ruleId":"178","replacedBy":"197"},{"ruleId":"180","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":66,"column":11,"nodeType":"201","endLine":66,"endColumn":22},{"ruleId":"199","severity":1,"message":"200","line":79,"column":11,"nodeType":"201","endLine":79,"endColumn":22},{"ruleId":"199","severity":1,"message":"200","line":82,"column":11,"nodeType":"201","endLine":82,"endColumn":22},{"ruleId":"178","replacedBy":"202"},{"ruleId":"180","replacedBy":"203"},{"ruleId":"186","severity":1,"message":"204","line":1,"column":8,"nodeType":"188","messageId":"189","endLine":1,"endColumn":14},{"ruleId":"186","severity":1,"message":"205","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"206","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":12},{"ruleId":"186","severity":1,"message":"207","line":14,"column":11,"nodeType":"188","messageId":"189","endLine":14,"endColumn":18},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],["208"],["209"],["208"],["209"],"no-unused-vars","'setFee' is assigned a value but never used.","Identifier","unusedVar","'setGas' is assigned a value but never used.","'levelRate' is assigned a value but never used.","'setLevelRate' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["208"],["209"],"'Home' is assigned a value but never used.",["208"],["209"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["208"],["209"],"'logger' is defined but never used.","'useState' is defined but never used.","'Web3' is defined but never used.","'library' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"/Users/tong/Projects/drep-project/teemo-exchange/src/reportWebVitals.js":"1","/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/PoolContract.js":"2","/Users/tong/Projects/drep-project/teemo-exchange/src/store/reducers/Common.js":"3","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/Quotation.jsx":"4","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/user/User.jsx":"5","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/user/UserSetting.jsx":"6","/Users/tong/Projects/drep-project/teemo-exchange/src/components/asyncRouter/AsyncImportComponent.jsx":"7","/Users/tong/Projects/drep-project/teemo-exchange/src/utils/Tools.js":"8","/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/OrderComponent.jsx":"9","/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/MarketComponent.jsx":"10","/Users/tong/Projects/drep-project/teemo-exchange/src/components/wallet/Connectors.js":"11","/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTable.jsx":"12","/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTableRow.jsx":"13","/Users/tong/Projects/drep-project/teemo-exchange/src/components/wallet/Connect.jsx":"14","/Users/tong/Projects/drep-project/teemo-exchange/src/components/popover/OwnPopover.jsx":"15","/Users/tong/Projects/drep-project/teemo-exchange/src/components/tooltip/OwnTooltip.jsx":"16","/Users/tong/Projects/drep-project/teemo-exchange/src/components/wallet/Config.js":"17","/Users/tong/Projects/drep-project/teemo-exchange/src/components/chart/ChartUtil.js":"18","/Users/tong/Projects/drep-project/teemo-exchange/src/components/slider/OwnSlider.jsx":"19","/Users/tong/Projects/drep-project/teemo-exchange/src/components/form/OwnDateRange.jsx":"20","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/App.js":"21","/Users/tong/Projects/drep-project/teemo-exchange/src/i18n/LangUtil.js":"22","/Users/tong/Projects/drep-project/teemo-exchange/src/store/types/index.js":"23","/Users/tong/Projects/drep-project/teemo-exchange/src/store/reducers/User.js":"24","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/Home.jsx":"25","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/user/UserCapticalRecord.jsx":"26","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/user/UserAccount.jsx":"27","/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/QuoteContract.js":"28","/Users/tong/Projects/drep-project/teemo-exchange/src/store/actions/CommonAction.js":"29","/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/EntrustComponent.jsx":"30","/Users/tong/Projects/drep-project/teemo-exchange/src/components/account/Withdraw.jsx":"31","/Users/tong/Projects/drep-project/teemo-exchange/src/i18n/I18n.js":"32","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/pool/PoolInfo.jsx":"33","/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/TeemoContract.js":"34","/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/CommonContract.js":"35","/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTableBody.jsx":"36","/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTableCell.jsx":"37","/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/RecordComponent.jsx":"38","/Users/tong/Projects/drep-project/teemo-exchange/src/components/account/Recharge.jsx":"39","/Users/tong/Projects/drep-project/teemo-exchange/src/utils/HttpUtil.js":"40","/Users/tong/Projects/drep-project/teemo-exchange/src/components/modal/OwnDialog.jsx":"41","/Users/tong/Projects/drep-project/teemo-exchange/src/components/modal/OwnBase.jsx":"42","/Users/tong/Projects/drep-project/teemo-exchange/src/store/reducers/index.js":"43","/Users/tong/Projects/drep-project/teemo-exchange/src/routers/index.js":"44","/Users/tong/Projects/drep-project/teemo-exchange/src/store/reducers/Trade.js":"45","/Users/tong/Projects/drep-project/teemo-exchange/src/components/head/HeaderComponent.jsx":"46","/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/PoolComponent.jsx":"47","/Users/tong/Projects/drep-project/teemo-exchange/src/utils/Constants.js":"48","/Users/tong/Projects/drep-project/teemo-exchange/src/hooks/Wallet.jsx":"49","/Users/tong/Projects/drep-project/teemo-exchange/src/utils/Config.js":"50","/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/UsdtContract.js":"51","/Users/tong/Projects/drep-project/teemo-exchange/src/store/actions/TradeAction.js":"52","/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTableHead.jsx":"53","/Users/tong/Projects/drep-project/teemo-exchange/src/components/form/OwnInput.jsx":"54","/Users/tong/Projects/drep-project/teemo-exchange/src/components/chart/Datafeed.js":"55","/Users/tong/Projects/drep-project/teemo-exchange/src/store/actions/ContractAction.js":"56","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/error/NotFound.jsx":"57","/Users/tong/Projects/drep-project/teemo-exchange/src/utils/WsUtil.js":"58","/Users/tong/Projects/drep-project/teemo-exchange/src/components/checkbox/CheckBox.jsx":"59","/Users/tong/Projects/drep-project/teemo-exchange/src/store/index.js":"60"},{"size":362,"mtime":1607410177305,"results":"61","hashOfConfig":"62"},{"size":1488,"mtime":1609384584585,"results":"63","hashOfConfig":"62"},{"size":832,"mtime":1607410177306,"results":"64","hashOfConfig":"62"},{"size":1759,"mtime":1607565933172,"results":"65","hashOfConfig":"62"},{"size":1164,"mtime":1607410177302,"results":"66","hashOfConfig":"62"},{"size":2667,"mtime":1607410177303,"results":"67","hashOfConfig":"62"},{"size":1097,"mtime":1607410177287,"results":"68","hashOfConfig":"62"},{"size":4887,"mtime":1607565933179,"results":"69","hashOfConfig":"62"},{"size":13339,"mtime":1609385187167,"results":"70","hashOfConfig":"62"},{"size":3600,"mtime":1607565933169,"results":"71","hashOfConfig":"62"},{"size":1697,"mtime":1609300997017,"results":"72","hashOfConfig":"62"},{"size":307,"mtime":1607410177296,"results":"73","hashOfConfig":"62"},{"size":208,"mtime":1607410177296,"results":"74","hashOfConfig":"62"},{"size":3324,"mtime":1609301288957,"results":"75","hashOfConfig":"62"},{"size":304,"mtime":1607410177291,"results":"76","hashOfConfig":"62"},{"size":366,"mtime":1607410177297,"results":"77","hashOfConfig":"62"},{"size":2337,"mtime":1609383528395,"results":"78","hashOfConfig":"62"},{"size":189,"mtime":1607565933166,"results":"79","hashOfConfig":"62"},{"size":876,"mtime":1607410177295,"results":"80","hashOfConfig":"62"},{"size":403,"mtime":1607410177288,"results":"81","hashOfConfig":"62"},{"size":859,"mtime":1609383565279,"results":"82","hashOfConfig":"62"},{"size":569,"mtime":1607410177299,"results":"83","hashOfConfig":"62"},{"size":413,"mtime":1607565933178,"results":"84","hashOfConfig":"62"},{"size":263,"mtime":1607410177307,"results":"85","hashOfConfig":"62"},{"size":269,"mtime":1607410177300,"results":"86","hashOfConfig":"62"},{"size":8371,"mtime":1607410177303,"results":"87","hashOfConfig":"62"},{"size":6517,"mtime":1609384412838,"results":"88","hashOfConfig":"62"},{"size":876,"mtime":1609385362756,"results":"89","hashOfConfig":"62"},{"size":770,"mtime":1607565933173,"results":"90","hashOfConfig":"62"},{"size":8616,"mtime":1607565933168,"results":"91","hashOfConfig":"62"},{"size":2223,"mtime":1607410177286,"results":"92","hashOfConfig":"62"},{"size":803,"mtime":1607410177299,"results":"93","hashOfConfig":"62"},{"size":7083,"mtime":1607410177301,"results":"94","hashOfConfig":"62"},{"size":1235,"mtime":1609385671640,"results":"95","hashOfConfig":"62"},{"size":1524,"mtime":1609381988053,"results":"96","hashOfConfig":"62"},{"size":213,"mtime":1607410177296,"results":"97","hashOfConfig":"62"},{"size":493,"mtime":1607410177296,"results":"98","hashOfConfig":"62"},{"size":1738,"mtime":1607565933170,"results":"99","hashOfConfig":"62"},{"size":2043,"mtime":1607410177286,"results":"100","hashOfConfig":"62"},{"size":3823,"mtime":1607565933179,"results":"101","hashOfConfig":"62"},{"size":310,"mtime":1607410177290,"results":"102","hashOfConfig":"62"},{"size":910,"mtime":1607410177290,"results":"103","hashOfConfig":"62"},{"size":275,"mtime":1607565933178,"results":"104","hashOfConfig":"62"},{"size":1578,"mtime":1607410177305,"results":"105","hashOfConfig":"62"},{"size":2127,"mtime":1607565933174,"results":"106","hashOfConfig":"62"},{"size":8385,"mtime":1607565933167,"results":"107","hashOfConfig":"62"},{"size":1890,"mtime":1607565933170,"results":"108","hashOfConfig":"62"},{"size":203,"mtime":1607410177307,"results":"109","hashOfConfig":"62"},{"size":2374,"mtime":1607410177298,"results":"110","hashOfConfig":"62"},{"size":556,"mtime":1609382303520,"results":"111","hashOfConfig":"62"},{"size":737,"mtime":1609383345751,"results":"112","hashOfConfig":"62"},{"size":2677,"mtime":1607565933173,"results":"113","hashOfConfig":"62"},{"size":213,"mtime":1607410177296,"results":"114","hashOfConfig":"62"},{"size":685,"mtime":1607410177288,"results":"115","hashOfConfig":"62"},{"size":2299,"mtime":1607565933166,"results":"116","hashOfConfig":"62"},{"size":491,"mtime":1607565933173,"results":"117","hashOfConfig":"62"},{"size":107,"mtime":1607410177301,"results":"118","hashOfConfig":"62"},{"size":3999,"mtime":1607565933180,"results":"119","hashOfConfig":"62"},{"size":1439,"mtime":1607410177288,"results":"120","hashOfConfig":"62"},{"size":342,"mtime":1607565933174,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"9xh2u9",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"127"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"141"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"127"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"153"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"153"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"127"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"153"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"127"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"/Users/tong/Projects/drep-project/teemo-exchange/src/reportWebVitals.js",[],["264","265"],"/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/PoolContract.js",[],["266","267"],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/reducers/Common.js",[],["268","269"],"/Users/tong/Projects/drep-project/teemo-exchange/src/pages/Quotation.jsx",["270","271"],"/Users/tong/Projects/drep-project/teemo-exchange/src/pages/user/User.jsx",["272","273"],"import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport './user.scss';\n\nconst User = (props) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"account-wrap\">\n      <div className=\"sidebar\">\n        <ul className=\"menu-box\">\n          <li className=\"menu-item\">\n            <NavLink to=\"/user/center\">\n              <AccountBalanceWalletIcon /> {t('menuAccount')}\n            </NavLink>\n          </li>\n          <li className=\"menu-item\">\n            <NavLink to=\"/user/rw-record\">\n              <ListAltIcon /> {t('menuRecord')}\n            </NavLink>\n          </li>\n          <li className=\"menu-item\">\n            <NavLink to=\"/user/setting\">\n              <SettingsIcon /> {t('menuSetting')}\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <div className=\"content\">{props.children}</div>\n    </div>\n  );\n};\n\nexport default User;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/user/UserSetting.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/asyncRouter/AsyncImportComponent.jsx",["274"],"import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './style.scss';\n\nconst AsyncImportComponent = function (importComp) {\n  function AsyncComponent(props) {\n    const { t } = useTranslation();\n\n    const [Comp, setComp] = useState(null);\n    useEffect(() => {\n      let isUnmounted = false;\n      const fetchComponent = async () => {\n        try {\n          const { default: importComponent } = await importComp();\n          if (!isUnmounted) {\n            setComp(() => importComponent);\n          }\n        } catch (e) {\n          console.error('component error:', e);\n          throw new Error('加载组件出错');\n        }\n      };\n\n      fetchComponent();\n      return () => {\n        isUnmounted = true;\n      };\n    }, []);\n    return Comp ? (\n      <Comp {...props} />\n    ) : (\n      <div className=\"loading\">\n        <CircularProgress />\n        <span>加载中...</span>\n      </div>\n    );\n  }\n  return AsyncComponent;\n};\n\nexport default AsyncImportComponent;\n",["275","276"],"/Users/tong/Projects/drep-project/teemo-exchange/src/utils/Tools.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/OrderComponent.jsx",["277","278","279","280","281","282","283"],"import React, { useState, useEffect, Fragment, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport DoubleArrowRoundedIcon from '@material-ui/icons/DoubleArrowRounded';\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\nimport OwnTooltip from '../tooltip/OwnTooltip';\nimport OwnSlider from '../slider/OwnSlider';\nimport Checkbox from '../checkbox/CheckBox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useWeb3React } from '@web3-react/core';\nimport * as Types from '../../store/types';\nimport { actionPoolInfo } from '../../store/actions/ContractAction';\nimport './order.scss';\nimport TeemoContract from '../../common/contract/TeemoContract';\nimport CommonContract from '../../common/contract/CommonContract';\nimport QuoteContract from '../../common/contract/QuoteContract';\nimport * as Tools from '../../utils/Tools';\nimport chainConfig from '../../components/wallet/Config'\n\nconst marks = [\n  { value: 0, label: '1x' },\n  { value: 20, label: '20x' },\n  { value: 40, label: '40x' },\n  { value: 60, label: '60x' },\n  { value: 80, label: '80x' },\n  { value: 100, label: '100x' },\n];\n\n// 止盈比例列表\nconst profitRateList = [25, 50, 75, 100, 150, 200];\n// 止损比例列表\nconst stopRateList = [30, 40, 50, 60, 70, 80];\nlet commonContract = null;\n\nconst OrderComponent = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const rechargeVisible = useSelector((state) => state.common.recharge.visible);\n  const { poolList, poolInfo } = useSelector((state) => state.contract);\n  const { active, library, account, chainId } = useWeb3React();\n  const orderRef = useRef();\n  const [orderHeight, setOrderHeight] = useState(0);\n  const [balance, setBalance] = useState(0); // 余额\n  const [moreFlag, setMoreFlag] = useState(false);\n  const [allowance, setAllowance] = useState(0);\n\n  const [type, setType] = useState(2); // 类型 1:现价 2:市价\n  const [dir, setDir] = useState(1); // 方向 2:涨 1:跌\n  const [price, setPrice] = useState(''); // 价格\n  const [bond, setBond] = useState(''); // b保证金\n  const [bondRate, setBondRate] = useState(''); // 保证金比例\n  const [profitType, setProfitType] = useState(1); // 止盈类型\n  const [profit, setProfit] = useState(''); // 止盈\n  const [profitRate, setProfitRate] = useState(''); // 止盈比例\n  const [stopType, setStopType] = useState(1); // 止损类型\n  const [stop, setStop] = useState(''); // 止损\n  const [stopRate, setStopRate] = useState(''); // 止损比例\n  const [fee, setFee] = useState(0); // 手续费\n  const [gas, setGas] = useState(0); // gas\n  const [level, setLevel] = useState(1); // 杠杆\n  const [levelMax, setLevelMax] = useState(false); // 杠杆最大\n  const [levelRate, setLevelRate] = useState(1); // 杠杆比例\n\n  useEffect(() => {\n    if (account && poolInfo.symbol) {\n      let teemoPoolContract = new TeemoContract(library, poolInfo.tokenAddr);\n      commonContract = new CommonContract(library);\n      let quoteContract = new QuoteContract(library, chainId || chainConfig.defaultChainId);\n      quoteContract.queryNewPrice(poolInfo.symbol).then((res) => {\n        console.log('queryNewPrice', res);\n      });\n      // 查询余额\n      commonContract.getBalanceOf(account, poolInfo.tokenAddr).then((res) => {\n        setBalance(res || 0);\n      });\n      // 是否授权\n      commonContract.getAllowance(account, poolInfo.tokenAddr).then((res) => {\n        setAllowance(res || 0);\n      });\n    }\n  }, [library, account, poolInfo]);\n\n  useEffect(() => {\n    // 设置列表高度\n    setOrderHeight(() => orderRef.current.clientHeight);\n  }, []);\n\n  // 池子切换\n  function switchPoolInfo(symbol) {\n    let obj = poolList.find((item) => item.symbol === symbol);\n    actionPoolInfo(obj)(dispatch);\n  }\n\n  // 授权\n  function gainAllowance() {\n    commonContract.approve(account, poolInfo.tokenAddr);\n  }\n\n  return (\n    <div className=\"order\" ref={orderRef}>\n      <div className=\"order-box\" style={{ height: `${orderHeight}px` }}>\n        <div className=\"btn-box\">\n          <button className={`btn-default ${dir === 1 ? 'bg-green' : ''}`} onClick={() => setDir(1)}>\n            买涨\n          </button>\n          <button className={`btn-default ${dir === 2 ? 'bg-red' : ''}`} onClick={() => setDir(2)}>\n            买跌\n          </button>\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <label htmlFor=\"\">钱包</label>\n          <span className=\"sd\">\n            {account ? `${account.substring(0, 6)}…${account.substring(account.length, account.length - 4)}` : ''}\n            <OwnTooltip title={<React.Fragment>需充进Layer2中才可进行交易Layer2上交易更快,gas更低</React.Fragment>} arrow placement=\"bottom\">\n              <font className=\"tip-text\">(Layer2)</font>\n            </OwnTooltip>\n          </span>\n        </div>\n\n        <div className=\"form-ele-sl\">\n          <label htmlFor=\"\">支付Token</label>\n          <span></span>\n          <select value={poolInfo.symbol} onChange={(e) => switchPoolInfo(e.target.value)}>\n            {poolList.map((item) => {\n              return <option value={item.symbol}>{item.symbol}</option>;\n            })}\n          </select>\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <label htmlFor=\"\">\n            可用\n            <OwnTooltip title={<React.Fragment>需充进Layer2中才可进行交易Layer2上交易更快,gas更低</React.Fragment>} arrow placement=\"bottom\">\n              <font className=\"tip-text\">(Layer2)</font>\n            </OwnTooltip>\n          </label>\n          <span className=\"sd\">{balance}</span>\n          <font className=\"recharge-btn\" onClick={() => dispatch({ type: Types.RECHARGE_VISIBLE, payload: { visible: !rechargeVisible } })}>\n            充值\n          </font>\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <label htmlFor=\"\">可用(ETH Main)</label>\n          <span className=\"sd\">55372901.627182</span>\n        </div>\n\n        <div className=\"form-ele-select\">\n          <select value={type} onChange={(e) => setType(parseInt(e.target.value))}>\n            <option value={1}>现价委托</option>\n            <option value={2}>市价委托</option>\n          </select>\n        </div>\n\n        <div className={type === 2 ? 'form-ele-disable' : 'form-ele-input'}>\n          <label htmlFor=\"\">价格</label>\n          <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} placeholder={type === 2 ? '最优市场价' : '请输入价格'} disabled={type === 2} />\n        </div>\n\n        <div className=\"form-ele-input\">\n          <label htmlFor=\"\">保证金</label>\n          <input type=\"text\" value={bond} onChange={(e) => setBond(e.target.value)} placeholder=\"最小为2USDT\" />\n        </div>\n\n        <ul className=\"form-list-c4\">\n          <li className={bondRate === 10 ? 'active' : ''} onClick={() => setBondRate(10)}>\n            10%\n          </li>\n          <li className={bondRate === 20 ? 'active' : ''} onClick={() => setBondRate(20)}>\n            20%\n          </li>\n          <li className={bondRate === 50 ? 'active' : ''} onClick={() => setBondRate(50)}>\n            50%\n          </li>\n          <li className={bondRate === 100 ? 'active' : ''} onClick={() => setBondRate(100)}>\n            100%\n          </li>\n        </ul>\n\n        <div className=\"form-ele-input\">\n          <label htmlFor=\"\">杠杆</label>\n          <input type=\"text\" value={level} onChange={(e) => setLevel(e.target.value)} />\n          <span className=\"unit\" style={{ color: '#f4f9ff' }}>\n            x\n          </span>\n        </div>\n\n        <div className=\"form-slider\">\n          <OwnSlider disabled={levelMax} value={levelRate} onChange={(e, val) => setLevelRate(val)} step={10} marks={marks} />\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <label htmlFor=\"\">\n            <OwnTooltip title={<React.Fragment>可用最大杠杆根据当前资金池深度以及头寸动态调整</React.Fragment>} arrow placement=\"bottom\">\n              <font className=\"tip-text\">当前可用最大杠杆:</font>\n            </OwnTooltip>\n            75x\n          </label>\n          <OwnTooltip title={<React.Fragment>根据建仓时可用的最大杠杆建仓</React.Fragment>} arrow placement=\"bottom-end\">\n            <span className=\"sd tip-text\">\n              <Checkbox size=\"small\" checked={levelMax} onChange={(e) => setLevelMax(e.target.checked)} />\n              最大\n            </span>\n          </OwnTooltip>\n        </div>\n\n        <div className=\"form-ele-more\">\n          <div className=\"more-title\">\n            <label htmlFor=\"\">高级</label>\n            <span onClick={() => setMoreFlag(!moreFlag)}>\n              <DoubleArrowRoundedIcon className={moreFlag ? 'svgup' : 'svgdown'} />\n            </span>\n          </div>\n\n          {moreFlag && (\n            <Fragment>\n              <div className=\"form-ele-desc\">\n                <label htmlFor=\"\">止盈</label>\n                <span className=\"sd\">\n                  <SwapHorizIcon style={{ fontSize: '18px', cursor: 'pointer' }} onClick={() => setProfitType(profitType === 1 ? 2 : 1)} />\n                  {profitType === 1 ? '价格' : '比例'}\n                </span>\n              </div>\n              <div className=\"form-ele-input\">\n                <label htmlFor=\"\">止盈价</label>\n                <input type=\"text\" placeholder=\"输入止盈价\" value={profit} onChange={(e) => setProfit(e.target.value)} />\n                {profitType === 2 && <span className=\"unit\">%</span>}\n              </div>\n              {profitType === 2 && (\n                <ul className=\"form-list-c6\">\n                  {profitRateList.map((item) => {\n                    return (\n                      <li className={profitRate === item ? 'active' : ''} onClick={() => setProfitRate(item)} key={item}>\n                        {item}%\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n              <div className=\"form-ele-desc\">\n                <label htmlFor=\"\">止损</label>\n                <span className=\"sd\">\n                  <SwapHorizIcon style={{ fontSize: '18px', cursor: 'pointer' }} onClick={() => setStopType(stopType === 1 ? 2 : 1)} />\n                  {profitType === 1 ? '价格' : '比例'}\n                </span>\n              </div>\n              <div className=\"form-ele-input\">\n                <label htmlFor=\"\">止损价</label>\n                <input type=\"text\" placeholder=\"输入止损价\" value={stop} onChange={(e) => setStop(e.target.value)} />\n                {stopType === 2 && <span className=\"unit\">%</span>}\n              </div>\n              {stopType === 2 && (\n                <ul className=\"form-list-c6\">\n                  {stopRateList.map((item) => {\n                    return (\n                      <li className={stopRate === item ? 'active' : ''} onClick={() => setStopRate(item)} key={item}>\n                        {item}%\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n              <div className=\"form-ele-desc\">\n                <OwnTooltip title={<React.Fragment>因下单时间和实际成交时间导致的价格滑点,不可避免</React.Fragment>} arrow placement=\"bottom\">\n                  <label htmlFor=\"\" className=\"tip-text\">\n                    最高滑价\n                  </label>\n                </OwnTooltip>\n                <span className=\"sd\"></span>\n              </div>\n              <ul className=\"form-list-c3\">\n                <li className=\"active\">0.5%</li>\n                <li>1.0%</li>\n                <li>定制</li>\n              </ul>\n            </Fragment>\n          )}\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <OwnTooltip title={<React.Fragment>Teemo不收取交易手续费</React.Fragment>} arrow placement=\"bottom\">\n            <label htmlFor=\"\" className=\"tip-text\">\n              手续费\n            </label>\n          </OwnTooltip>\n          <span className=\"sd\">{fee}</span>\n        </div>\n\n        <div className=\"form-ele-desc\">\n          <OwnTooltip title={<React.Fragment>GAS Price: 3 GWEI</React.Fragment>} arrow placement=\"bottom\">\n            <label htmlFor=\"\" className=\"tip-text\">\n              GAS(ETH)\n            </label>\n          </OwnTooltip>\n          <span className=\"sd\">{gas}</span>\n        </div>\n\n        <ul className=\"form-list-c3 mb24\">\n          <li className={level === 1 ? 'active' : ''} onClick={() => setLevel(1)}>\n            Safe\n          </li>\n          <li className={level === 2 ? 'active' : ''} onClick={() => setLevel(2)}>\n            Standard\n          </li>\n          <li className={level === 3 ? 'active' : ''} onClick={() => setLevel(3)}>\n            Fast\n          </li>\n        </ul>\n        {Tools.GT(allowance, 0) ? (\n          <button className={`btn-default ${type === 2 ? 'bg-green' : 'bg-red'}`} style={{ width: '100%' }}>\n            {type === 2 ? '买涨' : '买跌'}\n          </button>\n        ) : (\n          <button className={`btn-default ${type === 2 ? 'bg-green' : 'bg-red'}`} style={{ width: '100%' }} onClick={() => gainAllowance()}>\n            授权USDT\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OrderComponent;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/MarketComponent.jsx",["284"],"import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\nimport { usePopupState, bindHover, bindPopover, bindToggle } from 'material-ui-popup-state/hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionProductInfo } from '../../store/actions/TradeAction';\nimport OwnTooltip from '../tooltip/OwnTooltip';\nimport OwnPopover from '../popover/OwnPopover';\nimport './market.scss';\n\nconst MarketComponent = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const popupState = usePopupState({ variant: 'popover', popupId: 'coinPopover' });\n  const { productList, productInfo, tickerAll } = useSelector((state) => state.trade); // 币种列表\n\n  return (\n    <div className=\"market\">\n      <div className=\"current-coin\" {...bindHover(popupState)} {...bindToggle(popupState)}>\n        {productInfo.symbol}/{productInfo.legalSymbol}\n        <ArrowDropDownRoundedIcon style={{ fontSize: 32, margin: '-3px 0 0 -5px' }} />\n        <OwnPopover {...bindPopover(popupState)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} transformOrigin={{ vertical: 'top', horizontal: 'left' }}>\n          <ul className=\"coin-list\">\n            {productList.map((item) => {\n              return (\n                <li className={item.symbol === productInfo.symbol && 'active'} onClick={() => actionProductInfo(item)(dispatch)}>\n                  {item.symbol}/{item.legalSymbol}\n                </li>\n              );\n            })}\n          </ul>\n        </OwnPopover>\n      </div>\n      <div className=\"market-item\">\n        <span className={`fz16 ${tickerAll['1D'].CC}`}>{tickerAll['1D'].close || 0}</span>\n        <label htmlFor=\"\">≈10109.02 CNY</label>\n      </div>\n      <div className=\"market-item\">\n        <OwnTooltip\n          title={\n            <React.Fragment>\n              <span className=\"colorDefault fz14\">{t('textCapitalRateDesc1', { p: '10' })}</span> <br />\n              <span className=\"colorDefault fz14\">{t('textCapitalRateDesc2', { p: `0.006%` })}</span> <br />\n              {t('textCapitalRateDesc3')} <br />\n              {t('textCapitalRateDesc4')}\n            </React.Fragment>\n          }\n          arrow\n          placement=\"bottom\"\n        >\n          <label htmlFor=\"\" className=\"tip-text\">\n            {t('textCapitalRate')}\n          </label>\n        </OwnTooltip>\n        <span>0.006%</span>\n      </div>\n      <div className=\"market-item\">\n        <OwnTooltip\n          title={\n            <React.Fragment>\n              <span className=\"colorDefault fz14\">{t('textPositionRateDesc1', { p: '10' })}</span> <br />\n              <span className=\"colorDefault fz14\">{t('textPositionRateDesc2', { p: `0.006%` })}</span>\n            </React.Fragment>\n          }\n          arrow\n          placement=\"bottom\"\n        >\n          <label htmlFor=\"\" className=\"tip-text\">\n            {t('textPositionRate')}\n          </label>\n        </OwnTooltip>\n        <span>0.006%</span>\n      </div>\n      <div className=\"market-item\">\n        <label htmlFor=\"\">{t('textHUpDown')}</label>\n        <span className={tickerAll['1D'].UDC}>{tickerAll['1D'].UDR || 0}%</span>\n      </div>\n      <div className=\"market-item\">\n        <label htmlFor=\"\">{t('textHHigh')}</label>\n        <span>{tickerAll['1D'].high || 0}</span>\n      </div>\n      <div className=\"market-item\">\n        <label htmlFor=\"\">{t('textHLow')}</label>\n        <span>{tickerAll['1D'].low || 0}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketComponent;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/components/wallet/Connectors.js",["285","286","287","288"],"import { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\n\nimport chainConfig from './Config'\n\n\nexport const isInjectedSupported = () => {\n  return chainConfig.supportedChainIds.length > 0;\n}\n\nexport const isNetworkConnectorSupported = () => {\n  return true;\n}\n\nexport const isWalletconnectSupported = () => {\n  return true;\n}\n\nexport const isWalletlinkSupported = () => {\n  return true;\n}\n\nexport const isBscSupported = () => {\n  return chainConfig.supportedChainIds.filter((item) => item == 56 || item == 97).length > 0;\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: chainConfig.supportedChainIds });\n\nexport const network = new NetworkConnector({\n  urls: chainConfig.rpcUrls,\n  defaultChainId: chainConfig.defaultChainId,\n})\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { [chainConfig.defaultChainId]: [chainConfig.getChainConfig(chainConfig.defaultChainId).rpcUrl] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n});\n\nexport const walletlinkconnect = new WalletLinkConnector({\n  appName: window.location.protocol + \"//\" + window.location.host + (window.location.port.length > 0 ? `:${window.location.port}` : ''),\n  url: chainConfig.getChainConfig(chainConfig.defaultChainId).rpcUrl,\n})\n\nexport const bsc = new BscConnector({\n  supportedChainIds: chainConfig.supportedChainIds.filter((item) => item == 56 || item == 97)\n})\n",["289","290"],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTable.jsx",[],["291","292"],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTableRow.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/wallet/Connect.jsx",["293","294"],"import React, { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Web3 from 'web3';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { injected, walletconnect, walletlinkconnect, bsc, isBscSupported } from './Connectors';\nimport { useEagerConnect, useInactiveListener } from '../../hooks/Wallet';\nimport Modal from '../modal/OwnDialog';\nimport * as Types from '../../store/types';\nimport './connect.scss';\n\nconst WalletConnectModal = () => {\n  const dispatch = useDispatch();\n  const { library, connector, activate } = useWeb3React();\n  const [activatingConnector, setActivatingConnector] = useState();\n  const { visible } = useSelector((state) => state.common.wallet);\n  const [mm, setMm] = useState(false);\n\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  // 默认不连接\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector);\n\n  function changeWallet(c) {\n    setActivatingConnector(c);\n    activate(c);\n    dispatch({ type: Types.WALLET_VISIBLE, payload: { visible: false } });\n  }\n\n  return (\n    <div>\n      <Modal visible={visible} onClose={() => dispatch({ type: Types.WALLET_VISIBLE, payload: { visible: !visible } })} title=\"选择钱包供应商\" maxWidth=\"md\">\n        <div className=\"wallet-connect\">\n          <ul>\n            <li\n              className={!!(connector === injected) ? 'active' : ''}\n              onClick={() => {\n                if (!window.ethereum) {\n                  setMm(true);\n                } else {\n                  changeWallet(injected);\n                }\n              }}\n            >\n              {mm ? <a href=\"https://metamask.io/\">Install MetaMask</a> : <span>MetaMask</span>}\n              <img src=\"/imgs/wallet/metamask.png\" alt=\"\" srcset=\"\" />\n            </li>\n            <li className={!!(connector === walletconnect) ? 'active' : ''} onClick={() => changeWallet(walletconnect)}>\n              <span>WalletConnet</span>\n              <img src=\"/imgs/wallet/walletconnet.png\" alt=\"\" srcset=\"\" />\n            </li>\n            <li className={!!(connector === walletlinkconnect) ? 'active' : ''} onClick={() => changeWallet(walletlinkconnect)}>\n              <span>Coinbase Wallet</span>\n              <img src=\"/imgs/wallet/coinbaseWalletIcon.svg\" alt=\"\" />\n            </li>\n            { isBscSupported() && <li\n              className={!!(connector === bsc) ? 'active' : ''}\n              onClick={async () => {\n                if (window.BinanceChain) {\n                  changeWallet(bsc);\n                } else {\n                  setMm(true);\n                }\n              }}\n            >\n              {mm ? <a href=\"https://www.binance.org/\">Install Binance Chain Wallet</a> : <span>Binance Chain Wallet</span>}\n\n              <img src=\"/images/wallet/binance.png\" alt=\"\" />\n            </li> }\n          </ul>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default WalletConnectModal;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/components/popover/OwnPopover.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/tooltip/OwnTooltip.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/wallet/Config.js",["295","296","297","298","299"],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/chart/ChartUtil.js",["300"],"export default {\n  onDataCallback: null,\n  onRealTimeCallback: null,\n  to: null,\n  reset() {\n    this.onDataCallback = null;\n    this.onRealTimeCallback = null;\n    this.to = null;\n  },\n};\n","/Users/tong/Projects/drep-project/teemo-exchange/src/components/slider/OwnSlider.jsx",[],["301","302"],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/form/OwnDateRange.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/pages/App.js",["303","304"],"/Users/tong/Projects/drep-project/teemo-exchange/src/i18n/LangUtil.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/types/index.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/reducers/User.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/pages/Home.jsx",["305"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Index() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state);\n\n  return <div className=\"App\">{JSON.stringify(user)}</div>;\n}\n\nexport default Index;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/pages/user/UserCapticalRecord.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/pages/user/UserAccount.jsx",["306","307","308","309","310","311"],"import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Table from '../../components/table/OwnTable';\nimport TableHead from '../../components/table/OwnTableHead';\nimport TableBody from '../../components/table/OwnTableBody';\nimport TableRow from '../../components/table/OwnTableRow';\nimport TableCell from '../../components/table/OwnTableCell';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Types from '../../store/types';\nimport { actionRechargeModal, actionWithdrawModal } from '../../store/actions/CommonAction';\nimport './userAccount.scss';\nimport chainConfig from '../../components/wallet/Config'\n\nimport { useWeb3React } from '@web3-react/core';\nimport TeemoContract from '../../common/contract/TeemoContract';\nimport UsdtContract from '../../common/contract/UsdtContract';\nimport QuoteContract from '../../common/contract/QuoteContract';\nimport PoolContract from '../../common/contract/PoolContract';\nimport CommonContract from '../../common/contract/CommonContract';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\nconst rows = [createData('BTC', 882931.762814, '0.000000', '0.000000', '0.000000'), createData('USDT', 11.000128, '0.000000', '0.000000', '0.000000')];\n\nlet commonContract = null;\n// 查询余额方法\nconst getBalance = (address, tokenAddr) => {\n  if (!commonContract || !address || !tokenAddr) return;\n  return commonContract.getBalanceOf(address, tokenAddr);\n};\n// 查询可质押余额\nconst getBalancePledge = (address, tokenAddr) => {\n  if (!commonContract || !address || !tokenAddr) return;\n  return commonContract.getBalanceOf(address, tokenAddr);\n};\n// 查询可解锁余额\nconst getBalanceUnlock = (address, tokenAddr) => {\n  if (!commonContract || !address || !tokenAddr) return;\n  return commonContract.getBalanceOf(address, tokenAddr);\n};\n\nconst UserAccount = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { library, account, chainId } = useWeb3React();\n  const withdrawVisible = useSelector((state) => state.common.withdrawVisible); // 充值弹窗\n  const rechargeVisible = useSelector((state) => state.common.rechargeVisible); // 提现弹窗\n  const { poolList = [] } = useSelector((state) => state.contract); // 流动池账户列表\n  const [poolBalance, setPoolBalance] = useState({}); // 余额map\n\n  // 测试\n  useEffect(() => {\n    let teemoContract = new TeemoContract(library);\n    let usdtContract = new UsdtContract(library);\n    let quoteContract = new QuoteContract(library);\n    let poolContract = new PoolContract(library, account, chainId || chainConfig.defaultChainId);\n    let test = async () => {\n      console.log(await teemoContract.getSymbol());\n      console.log(await usdtContract.getSymbol());\n      console.log('teemo:', await teemoContract.getContract());\n      console.log('usdt:', await usdtContract.getContract());\n      console.log('quote:', await quoteContract.getContract());\n      console.log('pool:', await poolContract.getContract());\n      console.log('pool:', await poolContract.getAllPoolInfo());\n    };\n    test();\n  }, [library]);\n\n  // 查询余额\n  useEffect(() => {\n    if (!library || !account) return;\n    commonContract = new CommonContract(library);\n    let temp = {};\n    poolList.forEach(async (element) => {\n      temp[element.symbol] = await getBalance(account, element.tokenAddr);\n    });\n    setPoolBalance(temp);\n  }, [library, account, poolList]);\n\n  function pledgeFunc() {}\n  function unlockFunc() {}\n\n  return (\n    <div className=\"user-account\">\n      <div className=\"account-total\">\n        <div className=\"title\">{t('accountTitle')}</div>\n        <div className=\"amount\">\n          <span>0.34468139</span> BTC ≈ $ 3975.54363818\n        </div>\n      </div>\n      <div className=\"gap-row\"></div>\n      <div className=\"table-wrap\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t('textCurrency')}</TableCell>\n              <TableCell>\n                <span className=\"tip-text\">{t('textAvailable')}(Layer2)</span>\n              </TableCell>\n              <TableCell>{t('textFreeze')}</TableCell>\n              <TableCell>\n                <span className=\"tip-text\">{t('textAvailable')}(ETH Main)</span>\n              </TableCell>\n              <TableCell>{t('textOperation')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell>{row.calories}</TableCell>\n                <TableCell>{row.fat}</TableCell>\n                <TableCell>{row.carbs}</TableCell>\n                <TableCell>\n                  <span className=\"table-link\" onClick={() => actionRechargeModal({ visible: !rechargeVisible, code: 'BTC' })(dispatch)}>\n                    {t('textRecharge')}\n                  </span>\n                  <span className=\"table-link\" onClick={() => actionWithdrawModal({ visible: !withdrawVisible, code: 'BTC' })(dispatch)}>\n                    {t('textWithdraw')}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"gap-row\"></div>\n      <div className=\"table-wrap\">\n        <div className=\"table-title\">{t('accountPool')}</div>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t('textCurrency')}</TableCell>\n              <TableCell>\n                <span className=\"tip-text\">{t('textAvailable')}(Layer2)</span>\n              </TableCell>\n              <TableCell>{t('textOperation')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {poolList.map((item, index) => (\n              <TableRow key={`pool-list-${index}`}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.symbol}-TLP\n                </TableCell>\n                <TableCell>{poolBalance[item.symbol] || 0}</TableCell>\n                <TableCell>\n                  <span className=\"table-link\">{t('btnPledge')}</span>\n                  <span className=\"table-link\">{t('btnUnlock')}</span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default UserAccount;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/QuoteContract.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/actions/CommonAction.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/EntrustComponent.jsx",["312"],"import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Edit from '@material-ui/icons/Edit';\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\nimport OwnTooltip from '../tooltip/OwnTooltip';\nimport OwnDialogModal from '../modal/OwnDialog';\nimport { useSelector } from 'react-redux';\nimport './entrust.scss';\n\nimport { useWeb3React } from '@web3-react/core';\nimport TeemoContract from '../../common/contract/TeemoContract';\n\n// 止盈比例列表\nconst profitRateList = [25, 50, 75, 100, 150, 200];\n// 止损比例列表\nconst stopRateList = [30, 40, 50, 60, 70, 80];\n\nconst EntrustComponent = () => {\n  const { t } = useTranslation();\n  const { active, library, account } = useWeb3React();\n  const { poolInfo } = useSelector((state) => state.contract);\n\n  const [recordList] = useState(new Array(7).fill({ a: 'aaa' }));\n  const [type, setType] = useState(1);\n\n  const [visible, setVisible] = useState(false);\n  const [profitType, setProfitType] = useState(1); // 止盈类型\n  const [profit, setProfit] = useState(''); // 止盈\n  const [profitRate, setProfitRate] = useState(''); // 止盈比例\n  const [stopType, setStopType] = useState(1); // 止损类型\n  const [stop, setStop] = useState(''); // 止损\n  const [stopRate, setStopRate] = useState(''); // 止损比例\n\n  useEffect(() => {\n    if (!account || !poolInfo.tokenAddr) return;\n    let teemoContract = new TeemoContract(library, poolInfo.tokenAddr);\n    // 持仓列表\n    teemoContract.queryAllOrderList(account).then((res) => {\n      console.log('持仓列表:', res);\n    });\n  }, [library, account]);\n\n  return (\n    <div className=\"entrust\">\n      <div className=\"tab-box\">\n        <ul>\n          <li className={type === 1 ? 'active' : ''} onClick={() => setType(1)}>\n            {t('entrustTabPosition')}\n          </li>\n          <li className={type === 2 ? 'active' : ''} onClick={() => setType(2)}>\n            {t('entrustTabCurrent')}\n          </li>\n          <li className={type === 3 ? 'active' : ''} onClick={() => setType(3)}>\n            {t('entrustTabHistory')}\n          </li>\n          <li className={type === 4 ? 'active' : ''} onClick={() => setType(4)}>\n            {t('entrustTabClose')}\n          </li>\n        </ul>\n      </div>\n      <div className=\"table-box\">\n        <div className=\"table-head\">\n          <div className=\"table-column\">合约</div>\n          <div className=\"table-column\">{t('textDir')}</div>\n\n          <div className=\"table-column tip-text\">\n            <OwnTooltip title={<React.Fragment>{t('entrustPriceDesc')}</React.Fragment>} arrow placement=\"bottom\">\n              <span>{t('entrustPrice')}</span>\n            </OwnTooltip>\n          </div>\n\n          <div className=\"table-column\">{t('textBond')}</div>\n          <div className=\"table-column\">{t('textLever')}</div>\n          <div className=\"table-column tip-text\">\n            <OwnTooltip title={<React.Fragment>{t('textCapitalDesc')}</React.Fragment>} arrow placement=\"bottom\">\n              <span>{t('textCapital')}</span>\n            </OwnTooltip>\n          </div>\n          <div className=\"table-column tip-text\">\n            <OwnTooltip title={<React.Fragment>{t('textPositionDesc')}</React.Fragment>} arrow placement=\"bottom\">\n              <span>{t('textPosition')}</span>\n            </OwnTooltip>\n          </div>\n          <div className=\"table-column tip-text\">\n            <OwnTooltip title={<React.Fragment>{t('entrustCalcClosePriceDesc')}</React.Fragment>} arrow placement=\"bottom\">\n              <span>{t('entrustCalcClosePrice')}</span>\n            </OwnTooltip>\n          </div>\n          <div className=\"table-column tip-text\">\n            <OwnTooltip title={<React.Fragment>{t('entrustCalcProfitStopDesc')}</React.Fragment>} arrow placement=\"bottom\">\n              <span>{t('entrustCalcProfitStop')}</span>\n            </OwnTooltip>\n          </div>\n          <div className=\"table-column tip-text\">\n            <OwnTooltip title={<React.Fragment>{t('textProfitPriceDesc')}</React.Fragment>} arrow placement=\"bottom\">\n              <span>{t('textProfitPrice')}</span>\n            </OwnTooltip>\n          </div>\n          <div className=\"table-column tip-text\">\n            <OwnTooltip title={<React.Fragment>{t('textStopPriceDesc')}</React.Fragment>} arrow placement=\"bottom\">\n              <span>{t('textStopPrice')}</span>\n            </OwnTooltip>\n          </div>\n          <div className=\"table-column\">{t('textOperation')}</div>\n        </div>\n\n        {active ? (\n          recordList.map((item, index) => {\n            return (\n              <div className=\"table-row\" key={`en${index}`}>\n                <div className=\"table-column\">BTCUSDT</div>\n                <div className=\"table-column green\">买涨</div>\n                <div className=\"table-column\">17526.22</div>\n                <div className=\"table-column\">9129.22 USDT</div>\n                <div className=\"table-column\">10x</div>\n                <div className=\"table-column\">+7182.92 USDT</div>\n                <div className=\"table-column\">88.88 USDT</div>\n                <div className=\"table-column\">171292.11</div>\n                <div className=\"table-column\">+9128.23 USDT</div>\n                <div className=\"table-column\" onClick={() => setVisible(true)}>\n                  18101.22 <Edit style={{ fontSize: '14px' }} />\n                </div>\n                <div className=\"table-column\" onClick={() => setVisible(true)}>\n                  {t('entrustSPPriceTip')} <Edit style={{ fontSize: '14px' }} />\n                </div>\n                <div className=\"table-column\">\n                  <span className=\"link\">{t('textClose')}</span>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div className=\"no-login\">\n            <button className=\"btn-primary\">{t('walletUnconnectTip')}</button>\n          </div>\n        )}\n      </div>\n\n      <OwnDialogModal onClose={() => setVisible(false)} visible={visible} title={t('modalPSTitle')}>\n        <div className=\"stop-update-form\">\n          <div className=\"form-ele-desc\">\n            <label htmlFor=\"\">{t('textProfit')}</label>\n            <span className=\"sd\">\n              <SwapHorizIcon style={{ fontSize: '18px', cursor: 'pointer' }} onClick={() => setProfitType(profitType === 1 ? 2 : 1)} />\n              {profitType === 1 ? t('textPrice') : t('textRate')}\n            </span>\n          </div>\n          <div className=\"form-ele-input\">\n            <label htmlFor=\"\">{t('textProfitPrice')}</label>\n            <input type=\"text\" placeholder=\"输入止盈价\" value={profit} onChange={(e) => setProfit(e.target.value)} />\n            {profitType === 2 && <span className=\"unit\">%</span>}\n          </div>\n          <div className=\"form-error\">*当前设置的价格将导致修改后订单立即市价成交，请注意</div>\n          {profitType === 2 && (\n            <ul className=\"form-list-c6\">\n              {profitRateList.map((item) => {\n                return (\n                  <li className={profitRate === item ? 'active' : ''} onClick={() => setProfitRate(item)} key={item}>\n                    {item}%\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          <div className=\"form-ele-desc\">\n            <label htmlFor=\"\">{t('textStop')}</label>\n            <span className=\"sd\">\n              <SwapHorizIcon style={{ fontSize: '18px', cursor: 'pointer' }} onClick={() => setStopType(stopType === 1 ? 2 : 1)} />\n              {profitType === 1 ? t('textPrice') : t('textRate')}\n            </span>\n          </div>\n          <div className=\"form-ele-input\">\n            <label htmlFor=\"\">{t('textStopPrice')}</label>\n            <input type=\"text\" placeholder=\"输入止损价\" value={stop} onChange={(e) => setStop(e.target.value)} />\n            {stopType === 2 && <span className=\"unit\">%</span>}\n          </div>\n          <div className=\"form-error\">*当前设置的价格将导致修改后订单立即市价成交，请注意</div>\n          {stopType === 2 && (\n            <ul className=\"form-list-c6\">\n              {stopRateList.map((item) => {\n                return (\n                  <li className={stopRate === item ? 'active' : ''} onClick={() => setStopRate(item)} key={item}>\n                    {item}%\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          <div className=\"form-error\"></div>\n          <button className=\"btn-primary\">确认修改</button>\n        </div>\n      </OwnDialogModal>\n    </div>\n  );\n};\n\nexport default EntrustComponent;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/components/account/Withdraw.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/i18n/I18n.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/pages/pool/PoolInfo.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/TeemoContract.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/CommonContract.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTableBody.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTableCell.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/RecordComponent.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/account/Recharge.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/utils/HttpUtil.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/modal/OwnDialog.jsx",["313"],"import { useTranslation } from 'react-i18next';\nimport OwnBase from './OwnBase';\n\nconst OwnDialog = (props) => {\n  const { visible, title, onClose, children } = props;\n  return (\n    <OwnBase onClose={onClose} visible={visible} title={title}>\n      {children}\n    </OwnBase>\n  );\n};\n\nexport default OwnDialog;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/components/modal/OwnBase.jsx",["314"],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/reducers/index.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/routers/index.js",["315"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AsyncImportComponent from '../components/asyncRouter/AsyncImportComponent';\n\nimport HeaderComponent from '../components/head/HeaderComponent';\nimport User from '../pages/user/User';\n\nconst Home = AsyncImportComponent(() => import('../pages/Home'));\nconst Quotation = AsyncImportComponent(() => import('../pages/Quotation'));\nconst PoolInfo = AsyncImportComponent(() => import('../pages/pool/PoolInfo'));\n// const User = AsyncImportComponent(() => import('../pages/user/User'));\nconst UserAccount = AsyncImportComponent(() => import('../pages/user/UserAccount'));\nconst UserSetting = AsyncImportComponent(() => import('../pages/user/UserSetting'));\nconst UserCapticalRecord = AsyncImportComponent(() => import('../pages/user/UserCapticalRecord'));\nconst NotFound = AsyncImportComponent(() => import('../pages/error/NotFound'));\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <HeaderComponent></HeaderComponent>\n      <Switch>\n        <Route path=\"/\" exact component={Quotation} />\n        <Route path=\"/trade\" exact component={Quotation} />\n        <Route path=\"/pool/info\" exact component={PoolInfo} />\n        <User>\n          <Route path=\"/user/center\" exact component={UserAccount} />\n          <Route path=\"/user/setting\" exact component={UserSetting} />\n          <Route path=\"/user/rw-record\" exact component={UserCapticalRecord} />\n        </User>\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n",["316","317"],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/reducers/Trade.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/head/HeaderComponent.jsx",["318","319"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline';\nimport { useWeb3React } from '@web3-react/core';\nimport { usePopupState, bindToggle, bindPopover, bindHover } from 'material-ui-popup-state/hooks';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionRechargeModal, actionWithdrawModal, actionWalletModal } from '../../store/actions/CommonAction';\nimport { walletconnect } from '../wallet/Connectors';\nimport { NETWORK_LIST, NETWORK_TYPE } from '../../utils/Constants';\n\nimport OwnPopover from '../popover/OwnPopover';\nimport WithdrawModal from '../account/Withdraw';\nimport RechargeModal from '../account/Recharge';\nimport ConnectModal from '../wallet/Connect';\nimport './header.scss';\n\nconst HeaderComponent = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const withdrawVisible = useSelector((state) => state.common.withdraw.visible);\n  const rechargeVisible = useSelector((state) => state.common.recharge.visible);\n\n  const context = useWeb3React();\n  const { active, account, library, connector, deactivate, chainId } = context;\n\n  const popupStateLang = usePopupState({ variant: 'popover', popupId: 'langPopover' });\n  const popupStateWallet = usePopupState({ variant: 'popover', popupId: 'walletPopover' });\n  const popupStateOrder = usePopupState({ variant: 'popover', popupId: 'orderPopover' });\n\n  const [network, setNetwork] = useState(false);\n\n  // 复制地址\n  function copyAddrFunc() {\n    window.navigator.clipboard.writeText(account).then(\n      () => {\n        console.log('success');\n      },\n      (err) => console.log('fail')\n    );\n  }\n\n  useEffect(() => {\n    if (NETWORK_TYPE === 'prod') {\n      if (!chainId || chainId === 1) {\n        setNetwork(false);\n      } else {\n        // 显示网络错误\n        setNetwork(true);\n      }\n    } else if (NETWORK_TYPE === 'dev') {\n      if (!chainId || chainId === 3) {\n        setNetwork(false);\n      } else {\n        // 显示网络错误\n        setNetwork(true);\n      }\n    }\n  }, [active, chainId]);\n\n  return (\n    <div className=\"header\">\n      <img src=\"/imgs/logo.png\" alt=\"\" />\n      <ul className=\"nav\">\n        <li className=\"item\">\n          <NavLink to=\"/trade\">{t('navTrade')}</NavLink>\n        </li>\n        <li className=\"item\">\n          <NavLink to=\"/pool/info\">{t('navPool')}</NavLink>\n        </li>\n        <li className=\"item\">\n          <NavLink\n            to=\"/user/center\"\n            isActive={(match, location) => {\n              return location.pathname ? location.pathname.indexOf('/user') !== -1 : false;\n            }}\n          >\n            {t('navAccount')}\n          </NavLink>\n        </li>\n        <li className=\"item\">\n          <a href=\"\">{t('navPublic')}</a>\n        </li>\n        <li className=\"item\">\n          <a href=\"\">\n            {t('navMore')} <ExpandMoreRoundedIcon />\n          </a>\n        </li>\n      </ul>\n      {/* <div className=\"news\">\n        <Notifications />\n      </div> */}\n      {active && (\n        <div className=\"order-status\" {...bindToggle(popupStateOrder)} {...bindHover(popupStateOrder)}>\n          1 Pending...\n          <OwnPopover {...bindPopover(popupStateOrder)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} transformOrigin={{ vertical: 'top', horizontal: 'left' }}>\n            <ul className=\"order-status-list\">\n              <li className=\"title\">\n                <span>最近7笔交易</span>\n                <span>清空</span>\n              </li>\n              <li className=\"item\">\n                <span>USDT/ETH 建仓</span>\n                <span>\n                  <CheckCircleOutline />\n                </span>\n              </li>\n              <li className=\"item\">\n                <span>充值 11938.002912 USDT</span>\n                <span>\n                  <CheckCircleOutline />\n                </span>\n              </li>\n              <li className=\"no-data\">暂无交易记录</li>\n            </ul>\n          </OwnPopover>\n        </div>\n      )}\n\n      <div className=\"language\" {...bindToggle(popupStateLang)} {...bindHover(popupStateLang)}>\n        English <ExpandMoreRoundedIcon />\n        <OwnPopover {...bindPopover(popupStateLang)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} transformOrigin={{ vertical: 'top', horizontal: 'left' }}>\n          <ul className=\"lang-list\">\n            <li className=\"active\">English</li>\n            <li onClick={() => console.log('简体中文')}>简体中文</li>\n          </ul>\n        </OwnPopover>\n      </div>\n\n      {active ? (\n        <React.Fragment>\n          <div className=\"wallet\" {...bindToggle(popupStateWallet)} {...bindHover(popupStateWallet)}>\n            <img src={`/imgs/wallet/${library.connection.url}.png`} width=\"20\" alt=\"\" />\n            <span className=\"addr\">{`${account.substring(0, 6)}…${account.substring(account.length, account.length - 4)}`}</span>\n            {!network ? <span className=\"network\">{NETWORK_LIST[chainId]}</span> : <span className=\"network error\">Wrong Network</span>}\n\n            <ArrowDropDownRoundedIcon style={{ fontSize: 32, margin: '0 -6px 0 -5px' }} />\n          </div>\n          <OwnPopover {...bindPopover(popupStateWallet)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} transformOrigin={{ vertical: 'top', horizontal: 'left' }}>\n            <div className=\"wallet-popover\">\n              <div className=\"recharge-box line\">\n                <button className=\"btn-primary\" onClick={() => actionRechargeModal(!rechargeVisible)(dispatch)}>\n                  {t('textRecharge')}(Layer2)\n                </button>\n                <button className=\"btn-default\" onClick={() => actionWithdrawModal(!withdrawVisible)(dispatch)}>\n                  {t('textWithdraw')}\n                </button>\n              </div>\n              <ul className=\"wallet-menu-list\">\n                <li onClick={() => history.push('/user/rw-record')}>\n                  <ListAltIcon />\n                  {t('menuTradeRecord')}\n                </li>\n                <li onClick={() => history.push('/user/center')}>\n                  <AccountBalanceWalletIcon />\n                  {t('menuWalletDetail')}\n                </li>\n                <li className=\"line\" onClick={() => history.push('/user/setting')}>\n                  <SettingsIcon />\n                  {t('menuPersonSetting')}\n                </li>\n                <li onClick={() => copyAddrFunc()}>\n                  <FileCopyIcon />\n                  {t('copyAddress')}\n                </li>\n                <li>\n                  <a href={`https://etherscan.io/address/${account}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <StorageIcon />\n                    {t('menuAddressDetail')}\n                  </a>\n                </li>\n              </ul>\n              <div className=\"btn-box\">\n                <button\n                  onClick={() => {\n                    popupStateWallet.close();\n                    try {\n                      if (connector === walletconnect) {\n                        connector.close();\n                      } else {\n                        deactivate();\n                      }\n                    } catch (error) {}\n                  }}\n                >\n                  {t('walletQuit')}\n                </button>\n              </div>\n            </div>\n          </OwnPopover>\n        </React.Fragment>\n      ) : (\n        <button className=\"btn-primary\" onClick={() => actionWalletModal(true)(dispatch)}>\n          {t('walletConnect')}\n        </button>\n      )}\n\n      <WithdrawModal></WithdrawModal>\n      <RechargeModal></RechargeModal>\n      <ConnectModal></ConnectModal>\n    </div>\n  );\n};\n\nexport default HeaderComponent;\n","/Users/tong/Projects/drep-project/teemo-exchange/src/components/quotation/PoolComponent.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/utils/Constants.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/hooks/Wallet.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/utils/Config.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/common/contract/UsdtContract.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/actions/TradeAction.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/table/OwnTableHead.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/form/OwnInput.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/components/chart/Datafeed.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/actions/ContractAction.js",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/pages/error/NotFound.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/utils/WsUtil.js",["320","321"],"import { generateRandomAlphaNum } from './Tools';\nimport { actionTickerUpdate } from '../store/actions/TradeAction';\n\nexport default {\n  timer: undefined,\n  socket: undefined,\n  // 初始化\n  init: function (dispatch, callback) {\n    // 创建socket链接\n    this.socket = new WebSocket('ws://test.trade.idefiex.com:9002');\n    // socket = new WebSocket(`${window.location.protocol === 'http:' ? 'ws:' : 'wss:'}//${window.location.host}/websocket`);\n\n    // 默认打开\n    this.socket.onopen = () => {\n      this.socket.send(JSON.stringify({ cmd: '13012', seq: '1', data: { symbol: 'btc', ktype: '15', count: '600', starttime: '0', endtime: '0', istime: '0' } }));\n      console.log('webscket open');\n      /** 登录信息 start **/\n      let UUID = window.localStorage.getItem('UUID') || '';\n      if (!UUID) {\n        UUID = generateRandomAlphaNum(32);\n        window.localStorage.setItem('UUID', UUID);\n      }\n      let msg = { deviceid: UUID, clienttype: 3, clientversion: '1.0.0', username: UUID, visit: 1, language: 'en' };\n      this.sendMsg('8888', msg);\n      /** 登录信息 end **/\n\n      /** 心跳 start **/\n      this.timer = setInterval(() => {\n        this.sendMsg('3101', {});\n      }, 1000 * 30);\n      /** 心跳 end **/\n      callback();\n    };\n\n    // 接口订阅消息并格式化\n    this.socket.onmessage = (event) => {\n      let data = event.data;\n      let reader = new FileReader();\n      reader.onload = () => {\n        let content = reader.result;\n        let result = JSON.parse(content);\n        let {\n          cmd,\n          data: { info },\n        } = result;\n        if (info) {\n          this.fmtResult(cmd, info, dispatch);\n        }\n      };\n      reader.readAsText(data);\n    };\n\n    // 关闭链接\n    this.socket.onclose = (event) => {\n      console.info('WS closed:', event);\n    };\n\n    // 发生错误处理\n    this.socket.onerror = (event) => {\n      console.error('WS errored:', event);\n    };\n  },\n\n  // 发送订阅消息\n  sendMsg: function (cmd, msg) {\n    let temp = { cmd, seq: '1', data: msg };\n    if (this.socket) {\n      try {\n        this.socket.send(JSON.stringify(temp));\n      } catch (error) {\n        console.error('======error', error);\n        setTimeout(() => {\n          this.sendMsg(cmd, msg);\n        }, 500);\n      }\n    }\n  },\n\n  // 关闭\n  close: function () {\n    clearInterval(this.timer);\n    this.socket.close();\n  },\n\n  fmtMap: {\n    snap: 13501,\n    depth: 13502,\n    trade: 13503,\n    price: 13504,\n    '1mink': 13505,\n    '5mink': 13505,\n    '15mink': 13505,\n    '30mink': 13505,\n    '60mink': 13505,\n    '240mink': 13505,\n    dayk: 13506,\n    weekk: 13506,\n    monthk: 13506,\n  },\n\n  fmtResult: function (cmd, msg, dispatch) {\n    console.log(cmd, JSON.stringify(msg));\n    switch (cmd) {\n      case 8888: // 登录成功, 方可发送订阅消息, 逻辑太神奇.....(需要登录的带着token不可?)\n        // that.props.updateWsState(); // 更新ws连接表识\n        break;\n\n      case 13501: // ticker数据\n        // that.props.updateTicker(msg);\n        break;\n\n      case 13502: // 委托列表\n        // that.props.updateHandicaps(msg);\n        break;\n\n      case 13503: // 最新成交\n        // that.props.updateTrades(msg.datas);\n        break;\n\n      case 13504: // 最新价\n        break;\n\n      case 13505: // 分钟级k线\n        actionTickerUpdate(msg)(dispatch);\n        break;\n\n      case 13506: // 日以上级k线\n        actionTickerUpdate(msg)(dispatch);\n        break;\n\n      case 13007: // 订阅的所有数据, 提取处理函数\n        let { code, datas } = msg;\n        if (code === '0') {\n          let temp = datas[0];\n          for (const key in temp) {\n            if (temp.hasOwnProperty(key)) {\n              const ele = temp[key];\n              let cmd = this.fmtMap[key];\n              if (cmd) {\n                // this.fmtResult(cmd, ele, that);\n              }\n            }\n          }\n        }\n        break;\n\n      default:\n        break;\n    }\n  },\n};\n","/Users/tong/Projects/drep-project/teemo-exchange/src/components/checkbox/CheckBox.jsx",[],"/Users/tong/Projects/drep-project/teemo-exchange/src/store/index.js",[],{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"322","replacedBy":"326"},{"ruleId":"324","replacedBy":"327"},{"ruleId":"322","replacedBy":"328"},{"ruleId":"324","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":24,"column":6,"nodeType":"332","endLine":24,"endColumn":8,"suggestions":"333"},{"ruleId":"330","severity":1,"message":"331","line":38,"column":6,"nodeType":"332","endLine":38,"endColumn":27,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":25},{"ruleId":"335","severity":1,"message":"339","line":1,"column":27,"nodeType":"337","messageId":"338","endLine":1,"endColumn":36},{"ruleId":"335","severity":1,"message":"340","line":8,"column":13,"nodeType":"337","messageId":"338","endLine":8,"endColumn":14},{"ruleId":"322","replacedBy":"341"},{"ruleId":"324","replacedBy":"342"},{"ruleId":"335","severity":1,"message":"343","line":1,"column":56,"nodeType":"337","messageId":"338","endLine":1,"endColumn":67},{"ruleId":"335","severity":1,"message":"340","line":35,"column":11,"nodeType":"337","messageId":"338","endLine":35,"endColumn":12},{"ruleId":"335","severity":1,"message":"344","line":39,"column":11,"nodeType":"337","messageId":"338","endLine":39,"endColumn":17},{"ruleId":"335","severity":1,"message":"345","line":57,"column":15,"nodeType":"337","messageId":"338","endLine":57,"endColumn":21},{"ruleId":"335","severity":1,"message":"346","line":58,"column":15,"nodeType":"337","messageId":"338","endLine":58,"endColumn":21},{"ruleId":"335","severity":1,"message":"347","line":65,"column":11,"nodeType":"337","messageId":"338","endLine":65,"endColumn":28},{"ruleId":"330","severity":1,"message":"348","line":80,"column":6,"nodeType":"332","endLine":80,"endColumn":34,"suggestions":"349"},{"ruleId":"335","severity":1,"message":"336","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"351","line":27,"column":62,"nodeType":"352","messageId":"353","endLine":27,"endColumn":64},{"ruleId":"350","severity":1,"message":"351","line":27,"column":76,"nodeType":"352","messageId":"353","endLine":27,"endColumn":78},{"ruleId":"350","severity":1,"message":"351","line":50,"column":74,"nodeType":"352","messageId":"353","endLine":50,"endColumn":76},{"ruleId":"350","severity":1,"message":"351","line":50,"column":88,"nodeType":"352","messageId":"353","endLine":50,"endColumn":90},{"ruleId":"322","replacedBy":"354"},{"ruleId":"324","replacedBy":"355"},{"ruleId":"322","replacedBy":"356"},{"ruleId":"324","replacedBy":"357"},{"ruleId":"335","severity":1,"message":"358","line":3,"column":8,"nodeType":"337","messageId":"338","endLine":3,"endColumn":12},{"ruleId":"335","severity":1,"message":"359","line":13,"column":11,"nodeType":"337","messageId":"338","endLine":13,"endColumn":18},{"ruleId":"360","severity":1,"message":"361","line":54,"column":101,"nodeType":"352","messageId":"362","endLine":54,"endColumn":122},{"ruleId":"350","severity":1,"message":"363","line":54,"column":116,"nodeType":"352","messageId":"353","endLine":54,"endColumn":118},{"ruleId":"350","severity":1,"message":"363","line":54,"column":144,"nodeType":"352","messageId":"353","endLine":54,"endColumn":146},{"ruleId":"350","severity":1,"message":"351","line":56,"column":33,"nodeType":"352","messageId":"353","endLine":56,"endColumn":35},{"ruleId":"364","severity":1,"message":"365","line":66,"column":1,"nodeType":"366","endLine":74,"endColumn":2},{"ruleId":"364","severity":1,"message":"365","line":1,"column":1,"nodeType":"366","endLine":10,"endColumn":3},{"ruleId":"322","replacedBy":"367"},{"ruleId":"324","replacedBy":"368"},{"ruleId":"335","severity":1,"message":"369","line":8,"column":10,"nodeType":"337","messageId":"338","endLine":8,"endColumn":21},{"ruleId":"330","severity":1,"message":"370","line":24,"column":6,"nodeType":"332","endLine":24,"endColumn":24,"suggestions":"371"},{"ruleId":"335","severity":1,"message":"372","line":5,"column":9,"nodeType":"337","messageId":"338","endLine":5,"endColumn":17},{"ruleId":"335","severity":1,"message":"373","line":9,"column":13,"nodeType":"337","messageId":"338","endLine":9,"endColumn":18},{"ruleId":"335","severity":1,"message":"374","line":33,"column":7,"nodeType":"337","messageId":"338","endLine":33,"endColumn":23},{"ruleId":"335","severity":1,"message":"375","line":38,"column":7,"nodeType":"337","messageId":"338","endLine":38,"endColumn":23},{"ruleId":"330","severity":1,"message":"376","line":68,"column":6,"nodeType":"332","endLine":68,"endColumn":15,"suggestions":"377"},{"ruleId":"335","severity":1,"message":"378","line":81,"column":12,"nodeType":"337","messageId":"338","endLine":81,"endColumn":22},{"ruleId":"335","severity":1,"message":"379","line":82,"column":12,"nodeType":"337","messageId":"338","endLine":82,"endColumn":22},{"ruleId":"330","severity":1,"message":"380","line":41,"column":6,"nodeType":"332","endLine":41,"endColumn":24,"suggestions":"381"},{"ruleId":"335","severity":1,"message":"382","line":1,"column":10,"nodeType":"337","messageId":"338","endLine":1,"endColumn":24},{"ruleId":"335","severity":1,"message":"340","line":19,"column":11,"nodeType":"337","messageId":"338","endLine":19,"endColumn":12},{"ruleId":"335","severity":1,"message":"383","line":8,"column":7,"nodeType":"337","messageId":"338","endLine":8,"endColumn":11},{"ruleId":"322","replacedBy":"384"},{"ruleId":"324","replacedBy":"385"},{"ruleId":"386","severity":1,"message":"387","line":91,"column":11,"nodeType":"388","endLine":91,"endColumn":22},{"ruleId":"386","severity":1,"message":"387","line":94,"column":11,"nodeType":"388","endLine":94,"endColumn":22},{"ruleId":"364","severity":1,"message":"365","line":4,"column":1,"nodeType":"366","endLine":151,"endColumn":3},{"ruleId":"335","severity":1,"message":"389","line":137,"column":21,"nodeType":"337","messageId":"338","endLine":137,"endColumn":24},"no-native-reassign",["390"],"no-negated-in-lhs",["391"],["390"],["391"],["390"],["391"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["392"],["393"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'t' is assigned a value but never used.",["390"],["391"],"'useCallback' is defined but never used.","'active' is assigned a value but never used.","'setFee' is assigned a value but never used.","'setGas' is assigned a value but never used.","'teemoPoolContract' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chainId'. Either include it or remove the dependency array.",["394"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["390"],["391"],["390"],["391"],"'Web3' is defined but never used.","'library' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["390"],["391"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'chainId' and 'dispatch'. Either include them or remove the dependency array.",["395"],"'dispatch' is assigned a value but never used.","'Types' is defined but never used.","'getBalancePledge' is assigned a value but never used.","'getBalanceUnlock' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'account' and 'chainId'. Either include them or remove the dependency array.",["396"],"'pledgeFunc' is defined but never used.","'unlockFunc' is defined but never used.","React Hook useEffect has a missing dependency: 'poolInfo.tokenAddr'. Either include it or remove the dependency array.",["397"],"'useTranslation' is defined but never used.","'Home' is assigned a value but never used.",["390"],["391"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ele' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},"Update the dependencies array to be: [dispatch]",{"range":"410","text":"411"},"Update the dependencies array to be: [productInfo, period, dispatch]",{"range":"412","text":"413"},"Update the dependencies array to be: [library, account, poolInfo, chainId]",{"range":"414","text":"415"},"Update the dependencies array to be: [library, account, chainId, dispatch]",{"range":"416","text":"417"},"Update the dependencies array to be: [account, chainId, library]",{"range":"418","text":"419"},"Update the dependencies array to be: [library, account, poolInfo.tokenAddr]",{"range":"420","text":"421"},[1032,1034],"[dispatch]",[1370,1391],"[productInfo, period, dispatch]",[3364,3392],"[library, account, poolInfo, chainId]",[766,784],"[library, account, chainId, dispatch]",[3097,3106],"[account, chainId, library]",[1531,1549],"[library, account, poolInfo.tokenAddr]"]